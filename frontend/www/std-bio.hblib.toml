[[Preamble]]
content = 'from dataclasses import dataclass'

[[Preamble]]
content='''def bash(command):
    import subprocess

    subprocess.run(
        command,
        shell=True,
        text=True,
    )'''

[[Preamble]]
content='''def capture_bash(command):
    import subprocess

    return subprocess.run(
        command,
        shell=True,
        capture_output=True,
        text=True,
    ).stdout.split()'''

[[Preamble]]
content='''def sample_names(filename):
    sn = capture_bash(f"cat {filename} | cut -d ',' -f1 | tail -n +2")
    return sn'''

[Type.SraRnaSeq]
params.label = "Str"
params.sra_sample_sheet = "Str"
info.params.label = "Label for data"
info.params.sra_sample_sheet = "Path to sample sheet CSV with SRA metadata (sample name, SRR accession)"
info.code = '''@dataclass
class SraRnaSeq:
@dataclass
    class S:
        "RNA-seq data from SRA"

        label: str
        "Label for data"

        sra_sample_sheet: str
        "Path to sample sheet CSV with SRA metadata (sample name, SRR accession)"

@dataclass
    class D:
        pass'''

[Prop.P_SraRnaSeq]
params.label = "Str"
params.sra_sample_sheet = "Str"
info.title = "RNA-seq data from SRA"
info.params.label = "Label for data"
info.params.sra_sample_sheet = "Path to sample sheet CSV with SRA metadata"
info.code = '''@dataclass
class P_SraRnaSeq:
    "RNA-seq data from SRA"

    label: str
    "Label for data"

    sra_sample_sheet: str
    "Path to sample sheet CSV with SRA metadata"'''

[Function.F_SraRnaSeq]
params = {}
ret = "SraRnaSeq"
condition = [
    "P_SraRnaSeq { label = ret.label, sample_sheet = ret.sample_sheet, raw_data = ret.raw_data }",
]
info.description = """TODO"""
info.code = '''def F_SraRnaSeq(ret: SraRnaSeq.S) -> SraRnaSeq.D:
    "TODO"
    SraRnaSeq.D()'''

[Type.LocalRnaSeq]
params.label = "Str"
params.sample_sheet = "Str"
params.raw_data = "Str"
info.title = "RNA-seq"
info.params.label = "Label for data"
info.params.sample_sheet = "Path to sample sheet CSV"
info.params.raw_data = "Path to directory containing raw reads (FASTQ files)"
info.code = '''@dataclass
class LocalRnaSeq:
    "RNA-seq"

@dataclass
    class S:
        label: str
        "Label for data"

        sample_sheet: str
        "Path to sample sheet CSV"

        raw_data: str
        "Path to directory containing raw reads (FASTQ files)"

@dataclass
    class D:
        pass'''

[Prop.P_LocalRnaSeq]
params.label = "Str"
params.sample_sheet = "Str"
params.raw_data = "Str"
info.title = "RNA-seq"
info.params.label = "Label for data"
info.params.sample_sheet = "Path to sample sheet CSV"
info.params.raw_data = "Path to directory containing raw reads (FASTQ files)"
info.code = '''@dataclass
class P_LocalRnaSeq:
    "RNA-seq"

    label: str
    "Label for data"

    sample_sheet: str
    "Path to sample sheet CSV"

    raw_data: str
    "Path to directory containing raw reads (FASTQ files)"'''

[Function.F_LocalRnaSeq]
params = {}
ret = "LocalRnaSeq"
condition = [
    "P_LocalRnaSeq { label = ret.label, sample_sheet = ret.sample_sheet, raw_data = ret.raw_data }",
]
info.description = """TODO"""
info.code = '''def F_LocalRnaSeq(ret: LocalRnaSeq.S) -> LocalRnaSeq.D:
    "TODO"
    LocalRnaSeq.D()'''

[Type.RNASeq]
params.label = "Str"
params.qc = "Bool"
info.title = "Raw RNA-seq data (reads)"
info.params.label = "Label for data"
info.params.qc = "Whether or not quality checks have been run"
info.code = '''@dataclass
class RNASeq:
    "Raw RNA-seq data (reads)"

@dataclass
    class S:
        label: str
        "Label for data"

        qc: bool
        "Whether or not quality checks have been run"

@dataclass
    class D:
        sample_sheet: str
        path: str'''

[Function.from_local_rna_seq]
params.local = "LocalRnaSeq"
ret = "RNASeq"
condition = [
    "ret.label = local.label",
    "ret.qc = false",
]
info.title = "Load local RNA-seq"
info.description = """# Directly load local RNA-seq reads

This function loads raw RNA-seq data that you already have on your computer,
typically in the .fastq.gz file format."""
info.code = '''def from_local_rna_seq(local: LocalRnaSeq, ret: RNASeq.S) -> RNASeq.D:
    """Load local RNA-seq

    # Directly load local RNA-seq reads

    This function loads raw RNA-seq data that you already have on your computer,
    typically in the .fastq.gz file format."""

    return RNASeq.D(
        sample_sheet=local.static.sample_sheet,
        path=local.static.raw_data,
    )'''

[Function.from_sra_rna_seq]
params.sra = "SraRnaSeq"
ret = "RNASeq"
condition = [
    "ret.label = local.label",
    "ret.qc = false",
]
info.title = "Load RNA-seq from SRA"
info.description = """# Load RNA-seq reads from SRA database

This function loads RNA-seq data from the
[NCBI SRA database](https://www.ncbi.nlm.nih.gov/sra/)."""
info.code = '''def from_sra_rna_seq(sra: SraRnaSeq, ret: RNASeq.S) -> RNASeq.D:
    """Load RNA-seq from SRA

    # Load RNA-seq reads from SRA database

    This function loads RNA-seq data from the
    [NCBI SRA database](https://www.ncbi.nlm.nih.gov/sra/)."""

    return RNASeq.D(
        sample_sheet=sra.static.sample_sheet,
        path=sra.static.raw_data,
    )'''

