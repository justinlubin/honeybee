### Raw inputs

[Prop.RNAseq]
params.sample = "Str"

### Datatypes

[Type.Alignment]
params.sample = "Str"

[Type.ReadCountVector]
params.sample = "Str"

[Type.ReadCountMatrix]
params.sample1 = "Str"
params.sample2 = "Str"
params.bc = "Bool"

[Type.DifferentialGeneExpression]
params.sample1 = "Str"
params.sample2 = "Str"

### Functions

# Quantifiers

[Function.kallisto]
params = {}
ret = "ReadCountVector"
condition = [
    "RNAseq { sample = ret.sample }"
]

[Function.salmon]
params = {}
ret = "ReadCountVector"
condition = [
    "RNAseq { sample = ret.sample }"
]

# Aligners

[Function.bowtie2]
params = {}
ret = "Alignment"
condition = [
    "RNAseq { sample = ret.sample }"
]

[Function.STAR]
params = {}
ret = "Alignment"
condition = [
    "RNAseq { sample = ret.sample }"
]

# Read summarization

[Function.featureCountVector]
params.a = "Alignment"
ret = "ReadCountVector"
condition = [
    "ret.sample = a.sample",
]

# Combine reads

[Function.combine_reads]
params.r1 = "ReadCountVector"
params.r2 = "ReadCountVector"
ret = "ReadCountMatrix"
condition = [
    "ret.sample1 = r1.sample",
    "ret.sample2 = r2.sample",
    "ret.bc = false",
]

# Batch correction

[Function.combat_seq]
params.rcm = "ReadCountMatrix"
ret = "ReadCountMatrix"
condition = [
    "ret.sample1 = rcm.sample1",
    "ret.sample2 = rcm.sample2",
    "rcm.bc = false",
    "ret.bc = true",
]

# Differential gene expression

[Function.deseq2]
params.rcm = "ReadCountMatrix"
ret = "DifferentialGeneExpression"
condition = [
    "ret.sample1 = rcm.sample1",
    "ret.sample2 = rcm.sample2",
]
