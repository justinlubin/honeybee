(input fact In (.x Int))

;;; independent_choices

(output fact Step1)
(output fact Step2)
(output fact Step3)
(output fact Step4)
(output fact Step5)
(output fact Step6)
(output fact Step7)
(output fact Step8)
(output fact Step9)
(output fact Step10)

(computation a1 Step1 ((in In)) ())
(computation b1 Step1 ((in In)) ())
(computation c1 Step1 ((in In)) ())
(computation d1 Step1 ((in In)) ())
(computation e1 Step1 ((in In)) ())

(computation a2 Step2 ((in Step1)) ())
(computation b2 Step2 ((in Step1)) ())
(computation c2 Step2 ((in Step1)) ())
(computation d2 Step2 ((in Step1)) ())
(computation e2 Step2 ((in Step1)) ())

(computation a3 Step3 ((in Step2)) ())
(computation b3 Step3 ((in Step2)) ())
(computation c3 Step3 ((in Step2)) ())
(computation d3 Step3 ((in Step2)) ())
(computation e3 Step3 ((in Step2)) ())

(computation a4 Step4 ((in Step3)) ())
(computation b4 Step4 ((in Step3)) ())
(computation c4 Step4 ((in Step3)) ())
(computation d4 Step4 ((in Step3)) ())
(computation e4 Step4 ((in Step3)) ())

(computation a5 Step5 ((in Step4)) ())
(computation b5 Step5 ((in Step4)) ())
(computation c5 Step5 ((in Step4)) ())
(computation d5 Step5 ((in Step4)) ())
(computation e5 Step5 ((in Step4)) ())

(computation a6 Step6 ((in Step5)) ())
(computation b6 Step6 ((in Step5)) ())
(computation c6 Step6 ((in Step5)) ())
(computation d6 Step6 ((in Step5)) ())
(computation e6 Step6 ((in Step5)) ())

(computation a7 Step7 ((in Step6)) ())
(computation b7 Step7 ((in Step6)) ())
(computation c7 Step7 ((in Step6)) ())
(computation d7 Step7 ((in Step6)) ())
(computation e7 Step7 ((in Step6)) ())

(computation a8 Step8 ((in Step7)) ())
(computation b8 Step8 ((in Step7)) ())
(computation c8 Step8 ((in Step7)) ())
(computation d8 Step8 ((in Step7)) ())
(computation e8 Step8 ((in Step7)) ())

(computation a9 Step9 ((in Step8)) ())
(computation b9 Step9 ((in Step8)) ())
(computation c9 Step9 ((in Step8)) ())
(computation d9 Step9 ((in Step8)) ())
(computation e9 Step9 ((in Step8)) ())

(computation a10 Step10 ((in Step9)) ())
(computation b10 Step10 ((in Step9)) ())
(computation c10 Step10 ((in Step9)) ())
(computation d10 Step10 ((in Step9)) ())
(computation e10 Step10 ((in Step9)) ())

;;; rabbit_hole

(output fact RabbitHole)
(output fact NonRabbitHole)
(output fact RabbitHoleAnswer)

(computation start_rh RabbitHole ((in In)) ())
(computation rh RabbitHole ((in RabbitHole)) ())
(computation non_rh NonRabbitHole ((in In)) ())
(computation rh_ans RabbitHoleAnswer ((in NonRabbitHole)) ())

;;; limited_cycle

(output fact LimitedCycle (.count Int))
(output fact LimitedCycleAnswer)

(computation start_lc LimitedCycle
  ((in In))
  ((= (.count ret) (.x in))))

(computation continue_lc LimitedCycle
  ((in LimitedCycle))
  ((< (.count ret) (.count in))
   (< 0 (.count ret))))

(computation end_lc LimitedCycleAnswer
  ((in LimitedCycle))
  ())

;;; branches

(output fact BranchTop)
(output fact BranchMid)

(computation btop BranchTop
  ((b1 BranchMid) (b2 BranchMid) (b3 BranchMid) (b4 BranchMid))
  ())

(computation bmid1 BranchMid
  ((in1 In) (in2 In))
  ())

(computation bmid2 BranchMid
  ((in1 In) (in2 In))
  ())

(computation bmid3 BranchMid
  ((in1 In) (in2 In))
  ())

(computation bmid_impossible1 BranchMid
  ((in1 In) (in2 In))
  ((= (.x in1) (.x in2))
   (< (.x in1) (.x in2))))

(computation bmid_impossible2 BranchMid
  ((in1 In) (in2 In))
  ((< (.x in2) (.x in1))
   (< (.x in1) (.x in2))))

;;; simple_sorted

(output fact SimpleSorted4)

(computation simple_sorted SimpleSorted4
  ((in1 In) (in2 In) (in3 In) (in4 In))
  ((< (.x in1) (.x in2))
   (< (.x in2) (.x in3))
   (< (.x in3) (.x in4))))

;;; advanced_sorted

(output fact AdvancedSorted4)

(computation advanced_sorted AdvancedSorted4
  ((in1 In) (in2 In) (in3 In) (in4 In))
  ((< (.x in1) (.x in2))
   (< (.x in2) (.x in3))
   (< (.x in3) (.x in4))))
